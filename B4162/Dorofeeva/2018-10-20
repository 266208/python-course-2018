# Сумма двух матриц
print("1) Сложение матриц:")
X = [[12, 7, 3],
     [4, 5, 6],
     [7, 8, 9]]
Y = [[5, 8, 1],
     [6, 7, 3],
     [4, 5, 9]]
result = [[0, 0, 0],
          [0, 0, 0],
          [0, 0, 0]]
#Итерация по строкам
for i in range(len(X)):
    for j in range(len(X[0])):
        #Вычисление суммы матриц X и Y
        result[i][j] = X[i][j] + Y[i][j]
for r in result:
# Вывод на экран суммы двух матриц    
    print(r)
print("\n")
# Разность двух матриц
print("2) Вычитание матриц:")
X = [[12, 7, 3],
     [4, 5, 6],
     [7, 8, 9]]
Y = [[5, 8, 1],
     [6, 7, 3],
     [4, 5, 9]]
result = [[0, 0, 0],
          [0, 0, 0],
          [0, 0, 0]]
# Итерация по строкам
for i in range(len(X)):
    for j in range(len(X[0])):
        # Вычисление разности матриц X и Y
        result[i][j] = X[i][j] - Y[i][j]
for r in result:
# Вывод на экран разности двух матриц    
    print(r)
print("\n")
# Произведение двух матриц
print("3) Умножение матриц:")
X = [[12, 7, 3],
     [4, 5, 6],
     [7, 8, 9]]
Y = [[5, 8, 1, 2],
     [6, 7, 3, 0],
     [4, 5, 9, 1]]
result = [[0, 0, 0, 0],
          [0, 0, 0, 0],
          [0, 0, 0, 0]]
# Итерация по строкам матрицы X
for i in range(len(X)):
    # Итерация по столбцам матрицы Y
    for j in range(len(Y[0])):
        for k in range(len(Y)):
            # Вычисление произведения матриц X и Y
             result[i][j] += X[i][k]*Y[k][j]
for r in result:
# Вывод на экран произведения двух матриц 
    print(r)
print("\n")
# Транспонирование матрицы
print("4) Транспонирование матрицы:")
from pprint import pprint
X = [[0.5, 0, 0, 0, 0],
    [1, 0.5, 0, 0, 0],
    [1, 1, 0.5, 0, 0],
    [1, 1, 1, 0.5, 0],
    [1, 1, 1, 1, 0.5]]
# Операция транспонирования матрицы
X_t = list(zip(*X))
# Вывод на экран исходной матрицы
print("Исходная матрица:")
pprint(X)
# Вывод на экран транспонированной матрицы
print("\n")
print("Транспонированная матрица:")
pprint(X_t)
print("\n")

# Вычисление определителя матрицы
print("5) Определитель матрицы:")
print("Исходная матрица:")
import copy

def print_matrix(X):
    for strX in X:
        print(strX)
        
def minor(X, i, j):
    M = copy.deepcopy(X)  # Копирование
    del M[ i ]
    for i in range(len(X[0])-1):
        del M[i][j]
    return M

def det(X):
    m = len(X)
    n = len(X[0])
    if m != n:
        return None
    if n == 1:
        return X[0][0]
    signum = 1
    determinant = 0
    # Разложение по первой строке
    for j in range( n ):
        determinant += X[0][j]*signum*det(minor(X, 0, j)) 
        signum *= -1
    return determinant                           
# Исходная матрица      
X = [[12, 7, 3],
     [4, 5, 6],
     [7, 8, 9]]      
# Вывод на экран исходной матрицы               
print_matrix(X)
print("\n")
print("Определитель матрицы:")
# Вывод на экран определителя матрицы
print(det(X))
print("\n")

# Генерация массива случайных чисел
print("6) Генерация массива из 6 случайных чисел по убыванию:")
import random
x = []
# Числа лежат в промежутке от 0 до 1000
tmp = 1000
# Массив состоит из 6 случайных чисел
for i in range(6):
    if tmp != 0:
        x1 = random.randint(0,tmp)
        x.append(x1)
        tmp = x1
    else: break
# Вывод на экран массива  
print(x)
print("\n")

# Генерация случайного числа в диапазоне от 5 до 10
import random
x = random.randint(5, 10)
# Вывод на экран случайно сгенерированное число
print("7) Случайное число в диапазоне от 5 до 10:")
print(x)
print("\n")

# Генерация единичного случайного числа с плавающей точкой в диапазоне от 3 до 10
import random
x = random.triangular(3, 10)
print("8) Случайное число в диапазоне от 3 до 10:")
# Вывод на экран случайно сгенерированное число с плавающей точкой
print(x)
print("\n")

# Скалярное произведение двух векторов
print("9) Скалярное произведение:")
print("Первый вектор:")
u = [1.0, 2.1, 0.88]
print(u)
print("\n")
print("Второй вектор:")
v = [0.2, -5.2, 1.3]
print(v)
def dot(x,y):
     return sum(i[0]*i[1] for i in zip(u,v))
print("\n")
print("Скалярное произведение двух векторов:")
print(dot(u,v))
print("\n")

# Фильтрация массива
print("10) Выбор элементов массива:")
print("Исходный массив:")
X = [6, 7, 8, 9, 10, 11, 12]
print(X)
print("\n")
subset_of_X = set([6, 9, 12])
Y = [i for i in X if i not in subset_of_X]
print("Массив без элементов 6, 9, 12:")
print(Y)
